import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn import metrics
data={
    'text':[
    'i love programming in python',
    'python is an amazing language',
    'i hate getting errors in my code',
    'debugging can be frustrating',
    'machine learning is fascinating',
    'i dislike syntax errors'
        ],
    'label':['positive','positive','negative','negative','positive','negative']
}
df=pd.DataFrame(data)
df['label']=df['label'].map({'positive':1,'negative':0})
X_train,X_test,y_train,y_test=train_test_split(df['text'],df['label'],test_size=0.2,stratify=df['label'],random_state=42)


vectorizer=CountVectorizer(lowercase=True,stop_words='english')
X_train_vec=vectorizer.fit_transform(X_train)
X_test_vec=vectorizer.transform(X_test)
cif=MultinomialNB()
cif.fit(X_train_vec,y_train)
y_pred=cif.predict(X_test_vec)
accuracy=metrics.accuracy_score(y_test,y_pred)
print("accuracy of classifier:",accuracy)
sample_text=["i enjoy learning about artificial intelligence"]
sample_vec=vectorizer.transform(sample_text)
predicted_label=cif.predict(sample_vec)
print("predicted label for sample text:","positive" if predicted_label[0]==1 else "negative")